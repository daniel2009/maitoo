package com.weiye.controller;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URLDecoder;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;


import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.IOUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.weiye.common.constants.Constant;
import com.weiye.common.constants.ParameterConstants;
import com.weiye.common.constants.ResponseCode;
import com.weiye.common.util.DateUtil;
import com.weiye.common.util.NewsUtil;
import com.weiye.common.util.OrderUtil;
import com.weiye.common.util.StringUtil;
import com.weiye.common.util.UserUtil;
import com.weiye.exception.ServiceException;
import com.weiye.model.EndiciaLabel;
import com.weiye.model.News;
import com.weiye.model.Order;
import com.weiye.model.PageSplit;
import com.weiye.model.ResponseObject;
import com.weiye.service.EndiciaService;
import com.weiye.service.NewsService;
@Controller
public class EndiciaController extends BasicController {

	private static final long serialVersionUID = 6582185005680513923L;
	private static final Logger log = Logger.getLogger(EndiciaController.class);
	@Resource(name = "endiciaService")
	private EndiciaService endiciaService;
	@Value(value = "${page_size}")
	private int defaultPageSize;

	@RequestMapping(value = "/endicial/label_arg_url", method = { RequestMethod.POST, RequestMethod.GET })
	@ResponseBody
	public ResponseObject<Object> Endiciaargprice(HttpServletRequest request,EndiciaLabel label) {
		String userId = StringUtil.obj2String(request.getSession().getAttribute(Constant.USER_ID_SESSION_KEY));
		
		if (StringUtil.isEmpty(userId)) {
			return new ResponseObject<Object>(ResponseCode.NEED_LOGIN, "请登录后操作");
		}
		if (label == null) {
			return generateResponseObject(ResponseCode.PARAMETER_ERROR, "参数无效");
		}
		try {
			//return this.newsService.saveNews(news);
			label.setUserId(userId);
			return this.endiciaService.checkediciaprices(label);			
		} catch (Exception e) {
			log.error("添加失败", e);
			return generateResponseObject(ResponseCode.SHOW_EXCEPTION, "出现异常");
		}
	}

	@RequestMapping(value = "/endicial/label_print_url", method = { RequestMethod.POST, RequestMethod.GET })
	@ResponseBody
	public ResponseObject<Object> Endiciaprintlabel(HttpServletRequest request,HttpServletResponse response,EndiciaLabel label) {
		String userId = StringUtil.obj2String(request.getSession().getAttribute(Constant.USER_ID_SESSION_KEY));
		
		if (StringUtil.isEmpty(userId)) {
			return new ResponseObject<Object>(ResponseCode.NEED_LOGIN, "请登录后操作");
		}
		if (label == null) {
			return generateResponseObject(ResponseCode.PARAMETER_ERROR, "参数无效");
		}
		
		
		try {
			//return this.newsService.saveNews(news);
			label.setUserId(userId);
			ResponseObject<Object> obj= this.endiciaService.printlabel(label,request);	
			
			
			
			if(obj.getCode().equalsIgnoreCase(ResponseCode.SUCCESS_CODE))
			{
				/*InputStream imgInputStream = null;
				OutputStream os = null;
				try {
					
					// 输出流
					response.reset();
					response.setContentType("application/pdf");
					
					response.setHeader("content-disposition", "attachment; filename=label.pdf"); 
					
					
					
					//response.setHeader("Location","download.zip");
					String url=obj.getData().toString();
					imgInputStream = new FileInputStream(url);
	
					byte[] imgBytes = IOUtils.toByteArray(imgInputStream);
	
					os = response.getOutputStream();
	
					os.write(imgBytes);
				} catch (Exception e) {
					log.error("获取运单数据失败", e);
					throw new Exception("获取导出运单数据出现异常，无法获取数据", e);
				} finally {
					// orders.clear();
					// 6.无论成功与否关闭相应的流
					try {
						if (imgInputStream != null) {
							imgInputStream.close();
						}
						if (os != null) {
							os.close();
						}
					} catch (IOException e) {
						System.err.println(e.getMessage());
					}

				}*/
			}
			
			return obj;
		} catch (Exception e) {
			log.error("添加失败", e);
			return generateResponseObject(ResponseCode.SHOW_EXCEPTION, "出现异常");
		}
	}
	
	@RequestMapping(value = "/admin/endicial/searchbykey", method = { RequestMethod.GET,RequestMethod.POST })
	@ResponseBody
	public ResponseObject<PageSplit<EndiciaLabel>> searchByKeyOfAdmin(
			HttpServletRequest request,
	        @RequestParam(value = "userInfo", required = false) String userInfo,
	        @RequestParam(value = "labelInfo", required = false, defaultValue = "") String labelInfo,
	        @RequestParam(value = ParameterConstants.COMMON_SEARCH_SDATE, required = false) String sdate,
	        @RequestParam(value = ParameterConstants.COMMON_SEARCH_EDATE, required = false) String edate,
	        @RequestParam(value = ParameterConstants.COMMON_PAGESPLIT_PAGE_INDEX, required = false, defaultValue = "1") int pageIndex) {
		

		try {
			

			
			if (StringUtil.isEmpty(sdate) || !UserUtil.validateExportDate(sdate)) {
				sdate = "";
			} else {
				sdate = UserUtil.transformerDateString(sdate, " 00:00:00");
			}

			if (StringUtil.isEmpty(edate) || !UserUtil.validateExportDate(edate)) {
				edate = "";
			} else {
				edate = UserUtil.transformerDateString(edate, " 23:59:59");
			}



				pageIndex = Math.max(pageIndex, 1);
				return this.endiciaService.searchEndiciaLabelByKeys(null, userInfo, labelInfo, sdate, edate, defaultPageSize, pageIndex);
						
			
		} catch (Exception e) {
			log.error("查询运单失败", e);
			return generateResponseObject(ResponseCode.SHOW_EXCEPTION, "查询失败");
		}
	}
	
	@RequestMapping(value = "/endicial/searchbyuser", method = { RequestMethod.GET,RequestMethod.POST })
	@ResponseBody
	public ResponseObject<PageSplit<EndiciaLabel>> searchByKeyOfuser(
			HttpServletRequest request,
	        @RequestParam(value = ParameterConstants.COMMON_PAGESPLIT_PAGE_INDEX, required = false, defaultValue = "1") int pageIndex) {
		try {
			String userId = StringUtil.obj2String(request.getSession().getAttribute(Constant.USER_ID_SESSION_KEY));
			if (StringUtil.isEmpty(userId)) {
				return new ResponseObject<PageSplit<EndiciaLabel>>(ResponseCode.NEED_LOGIN, "请登录后操作");
			}
		
            return this.endiciaService.searchEndiciaLabelByKeys(userId, null, null, null, null, defaultPageSize, pageIndex);

				//pageIndex = Math.max(pageIndex, 1);
			//	return this.orderService.searchWebOrdersbybelonguser(oid, key, sdate, edate, state,storeid, defaultPageSize, pageIndex);
			
		} catch (Exception e) {
			log.error("查询运单失败", e);
			return generateResponseObject(ResponseCode.SHOW_EXCEPTION, "查询失败");
		}
	}
	
	
	@RequestMapping(value = "/admin/endicial/label_arg_url", method = { RequestMethod.POST, RequestMethod.GET })
	@ResponseBody
	public ResponseObject<Object> Endiciaargpricebyadmin(HttpServletRequest request,EndiciaLabel label) {
		String userId = StringUtil.obj2String(request.getSession().getAttribute(Constant.EMP_STORE_ID_SESSION_KEY));
		
		if (StringUtil.isEmpty(userId)) {
			return new ResponseObject<Object>(ResponseCode.NEED_LOGIN, "请登录后操作");
		}
		if (label == null) {
			return generateResponseObject(ResponseCode.PARAMETER_ERROR, "参数无效");
		}
		try {
			//return this.newsService.saveNews(news);
			//label.setUserId(userId);
			return this.endiciaService.checkediciapricesbyadmin(label);			
		} catch (Exception e) {
			log.error("添加失败", e);
			return generateResponseObject(ResponseCode.SHOW_EXCEPTION, "出现异常");
		}
	}
	
	@RequestMapping(value = "/admin/endicial/label_print_url", method = { RequestMethod.POST, RequestMethod.GET })
	@ResponseBody
	public ResponseObject<Object> Endiciaprintlabelbyadmin(HttpServletRequest request,HttpServletResponse response,EndiciaLabel label) {
		String userId = StringUtil.obj2String(request.getSession().getAttribute(Constant.EMP_STORE_ID_SESSION_KEY));
		
		if (StringUtil.isEmpty(userId)) {
			return new ResponseObject<Object>(ResponseCode.NEED_LOGIN, "请登录后操作");
		}
		if (label == null) {
			return generateResponseObject(ResponseCode.PARAMETER_ERROR, "参数无效");
		}
		
		
		try {
			String adminname="";
			adminname=StringUtil.obj2String(request.getSession().getAttribute(Constant.EMP_STORE_NAME_SESSION_KEY));
			label.setAdminid(StringUtil.obj2String(request.getSession().getAttribute(Constant.EMP_ID_SESSION_KEY)));
			label.setUserId("-1");
			ResponseObject<Object> obj= this.endiciaService.printlabelbyadmin(label, request, adminname);	
			
			
			return obj;
		} catch (Exception e) {
			log.error("添加失败", e);
			return generateResponseObject(ResponseCode.SHOW_EXCEPTION, "出现异常");
		}
	}

}
