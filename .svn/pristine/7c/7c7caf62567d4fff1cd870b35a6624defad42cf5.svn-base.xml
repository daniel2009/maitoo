<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.weiye.dao.StoragePositionDao">	<resultMap id="basic_result_map" type="com.weiye.model.StoragePosition">		<id column="id" property="id" javaType="String" />		<result column="storage_id" property="storageId" javaType="String"/>		<result column="col_number" property="colNumber" javaType="String"/>		<result column="row_number" property="rowNumber" javaType="String"/>		<result column="available" property="available" javaType="String"/>		<result column="user_id" property="userId" javaType="String"/>		<result column="modify_date" property="modifyDate" javaType="String"/>		<result column="position" property="position" javaType="String"/>		<result column="user_name" property="userName" javaType="String"/>		<result column="storage_name" property="storageName" javaType="String"/>			</resultMap>	<resultMap id="result_map_with_record" type="com.weiye.model.StoragePosition">		<id column="id" property="id" javaType="String" />		<result column="storage_id" property="storageId" javaType="String"/>		<result column="col_number" property="colNumber" javaType="String"/>		<result column="row_number" property="rowNumber" javaType="String"/>		<result column="available" property="available" javaType="String"/>		<result column="user_id" property="userId" javaType="String"/>		<result column="modify_date" property="modifyDate" javaType="String"/>		<result column="position" property="position" javaType="String"/>		<result column="user_name" property="userName" javaType="String"/>		<result column="storage_name" property="storageName" javaType="String"/>		<collection property="recordList" ofType="com.weiye.model.StoragePositionRecord">			<id property="id" column="record_id" javaType="String"/>			<result property="relateId" column="record_relate_id" javaType="String"/>		</collection>	</resultMap>		<update id="updateUseStoragePosition">		UPDATE storage_position SET available = #{available}, user_id = #{userId}, modify_date=#{modifyDate} WHERE id = #{id}	</update>	<insert id="insert" keyProperty="id" useGeneratedKeys="true">		INSERT INTO storage_position(storage_id, col_number, row_number, available, modify_date) VALUES(#{storageId}, #{colNumber}, #{rowNumber}, #{available}, #{modifyDate})	</insert>	<select id="findById" resultMap="result_map_with_record">		SELECT 			p.*, 			u.real_name AS user_name,			CONCAT(s.name, '-', p.row_number, '-', p.col_number) AS position,			r.id AS record_id,			r.relate_id AS record_relate_id		FROM storage_position p			LEFT JOIN storage_position_record r ON p.id=r.storage_position_id			LEFT JOIN storage s ON p.storage_id=s.id 			LEFT JOIN users u ON p.user_id=u.id		WHERE p.id = #{id}		ORDER BY r.relate_id	</select>	<select id="findByIdRelateId" resultMap="result_map_with_record">		SELECT 			p.*, 			u.real_name AS user_name,			CONCAT(s.name, '-', p.row_number, '-', p.col_number) AS position,			r.id AS record_id,			r.relate_id AS record_relate_id		FROM storage_position p			LEFT JOIN storage_position_record r ON p.id=r.storage_position_id			LEFT JOIN storage s ON p.storage_id=s.id 			LEFT JOIN users u ON p.user_id=u.id		WHERE p.id = #{id} AND r.relate_id = #{relateId}		ORDER BY r.relate_id	</select>		<select id="findStoragePositionByStorageAndRecord" resultMap="result_map_with_record">		SELECT 			p.*, 			u.real_name AS user_name,			CONCAT(s.name, '-', p.row_number, '-', p.col_number) AS position,			r.id AS record_id,			r.relate_id AS record_relate_id		FROM storage_position p			LEFT JOIN storage_position_record r ON p.id=r.storage_position_id			LEFT JOIN storage s ON p.storage_id=s.id 			LEFT JOIN users u ON p.user_id=u.id		WHERE s.warehouse_id=#{storage.warehouseId} AND s.type=#{storage.type}			<if test='storage.type!="2"'> 			AND s.type_relate_id=#{storage.typeRelateId}			</if>			AND r.relate_id=#{storagePositionRecord.relateId}	</select>		<select id="countStoragePositionByUser" resultType="java.lang.Integer">		SELECT COUNT(p.id) FROM storage_position p			LEFT JOIN storage s ON p.storage_id=s.id 			LEFT JOIN users u ON p.user_id=u.id		WHERE		<if test="storagePosition.userId!=null and storagePosition.userId!=''"> 		u.id=#{storagePosition.userId}		</if>		<if test="storagePosition.userId==null or storagePosition.userId==''"> 		u.real_name LIKE #{storagePosition.userName} OR u.email LIKE #{storagePosition.userName} OR u.phone LIKE #{storagePosition.userName}		</if>		<if test="storage!=null and storage.id!=null and storage.id!=''">		AND s.id=#{storage.id}		</if>	</select>	<select id="findStoragePositionByUser" resultMap="result_map_with_record">		SELECT 			p.*, 			s.name AS storage_name,			u.real_name AS user_name,			CONCAT(s.name, '-', p.row_number, '-', p.col_number) AS position,			0 AS record_id,			GROUP_CONCAT(r.relate_id SEPARATOR ',') AS record_relate_id		FROM storage_position p			LEFT JOIN storage_position_record r ON p.id=r.storage_position_id			LEFT JOIN storage s ON p.storage_id=s.id 			LEFT JOIN users u ON p.user_id=u.id		WHERE		<if test="storagePosition.userId!=null and storagePosition.userId!=''"> 		u.id=#{storagePosition.userId}		</if>		<if test="storagePosition.userId==null or storagePosition.userId==''"> 		u.real_name LIKE #{storagePosition.userName} OR u.email LIKE #{storagePosition.userName} OR u.phone LIKE #{storagePosition.userName}		</if>		<if test="storage!=null and storage.id!=null and storage.id!=''">		AND s.id=#{storage.id}		</if>		GROUP BY p.id		ORDER BY u.id		LIMIT #{firstResult}, #{pageSize}	</select>		<select id="findNextEmptyStoragePositionByStorage" resultMap="basic_result_map">		SELECT *, s.name AS storage_name FROM storage_position p LEFT JOIN storage s ON p.storage_id=s.id  WHERE s.warehouse_id=#{warehouseId} AND s.type=#{type} AND s.type_relate_id=#{typeRelateId} AND p.available=1 ORDER BY 1 LIMIT 1	</select>	<select id="findNextEmptyStoragePositionByWarehoseIdTypeRelate" resultMap="basic_result_map">		SELECT *, s.name AS storage_name FROM storage_position p LEFT JOIN storage s ON p.storage_id=s.id  WHERE s.warehouse_id=#{warehouseId} AND s.type=#{type} AND s.type_relate_id=#{typeRelateId} AND p.available=1 ORDER BY 1 LIMIT 1	</select>	<!-- 查询该用户已有储藏间 -->	<select id="findStoragePositionByWarehoseIdTypeRelateUser" resultMap="basic_result_map">		SELECT *, s.name AS storage_name FROM storage_position p LEFT JOIN storage s ON p.storage_id=s.id  WHERE s.warehouse_id=#{warehouseId} AND s.type=#{type} AND s.type_relate_id=#{typeRelateId} AND p.user_id = #{userId} AND p.available=0 ORDER BY 1 LIMIT 1	</select>	<!-- 查出运单信息有可能用不到 -->	<select id="findUserStoragePositionByWarehoseIdTypeRelate" resultMap="basic_result_map">		SELECT *, s.name AS storage_name FROM storage_position p LEFT JOIN storage s ON p.storage_id=s.id  WHERE s.warehouse_id=#{warehouseId} AND s.type=#{type} AND s.type_relate_id=#{typeRelateId} AND p.available=1 ORDER BY 1 LIMIT 1	</select>	<select id="findNextEmptyStoragePositionByStorageList" resultMap="basic_result_map">		SELECT *, s.name AS storage_name FROM storage_position p LEFT JOIN storage s ON p.storage_id=s.id  WHERE s.warehouse_id=#{warehouseId} AND s.type=#{type} AND s.type_relate_id=#{typeRelateId} AND p.available=1 ORDER BY 1	</select>	<select id="findStoragePositionByWarehouseIdAndTypeAndRelateIdRowCol" resultMap="basic_result_map">		SELECT *, s.name AS storage_name FROM storage_position p LEFT JOIN storage s ON p.storage_id=s.id  WHERE s.warehouse_id=#{warehouseId} AND s.type=#{type} AND s.type_relate_id=#{typeRelateId} AND p.available=1 AND p.storage_id=#{storageId} AND p.col_number=#{colNumber} AND p.row_number=#{rowNumber}	</select>	<select id="findByStorageIdAndUserId" resultMap="basic_result_map">		SELECT *, s.name AS storage_name, CONCAT(s.name, '-', p.row_number, '-', p.col_number) AS position FROM storage_position p LEFT JOIN storage s ON p.storage_id=s.id  WHERE s.id=#{storageId} AND user_id = #{userId} LIMIT 1	</select>	<select id="findByNameAndPosition" resultMap="basic_result_map">		SELECT *, s.name AS storage_name FROM storage_position p LEFT JOIN storage s ON p.storage_id=s.id  WHERE s.name=#{storageName} AND p.col_number=#{colNumber} AND p.row_number=#{rowNumber} LIMIT 1	</select>	<select id="findNoPositionUserByStorage" resultMap="result_map_with_record">		SELECT u.id AS id, u.id AS user_id, u.real_name AS user_name, relate.id AS record_relate_id FROM users u		LEFT JOIN <if test='storage.type=="0"'> transhipment_bill relate ON relate.user_id=u.id WHERE tran_warehouse_id=#{storage.typeRelateId} </if>			<if test='storage.type=="1"'> transhipment_bill relate ON relate.user_id=u.id WHERE 1=1 </if>			<if test='storage.type=="2"'> `order` relate ON relate.user_id=u.id WHERE relate.channel_id=#{storage.typeRelateId} </if>			AND warehouse_id=#{storage.warehouseId} 			AND state IN <foreach collection="array" item="item" separator="," open="(" close=")">#{item}</foreach>			AND u.id NOT IN (SELECT p.user_id FROM storage_position_record r LEFT JOIN storage_position p ON r.storage_position_id=p.id LEFT JOIN storage s ON s.id=p.storage_id WHERE s.warehouse_id=#{storage.warehouseId} AND s.type=#{storage.type} AND s.type_relate_id=#{storage.typeRelateId})	</select>	<select id="findNoPositionRecordByStorageAndUser" resultMap="result_map_with_record">		SELECT u.id AS id, u.id AS user_id, u.real_name AS user_name, relate.id AS record_relate_id FROM users u		LEFT JOIN <if test='storage.type=="0"'> transhipment_bill relate ON relate.user_id=u.id WHERE tran_warehouse_id=#{storage.typeRelateId} </if>			<if test='storage.type=="1"'> transhipment_bill relate ON relate.user_id=u.id WHERE 1=1 </if>			<if test='storage.type=="2"'> `order` relate ON relate.user_id=u.id WHERE relate.channel_id=#{storage.typeRelateId} </if>			AND warehouse_id=#{storage.warehouseId} 			AND state IN <foreach collection="array" item="item" separator="," open="(" close=")">#{item}</foreach>			AND relate.id NOT IN (SELECT r.relate_id FROM storage_position_record r LEFT JOIN storage_position p ON r.storage_position_id=p.id LEFT JOIN storage s ON s.id=p.storage_id WHERE s.warehouse_id=#{storage.warehouseId} AND s.type=#{storage.type} AND s.type_relate_id=#{storage.typeRelateId})			AND user_id=#{user.id}	</select>		<select id="findByStorageId" resultMap="basic_result_map">		SELECT 			p.*, 			u.real_name AS user_name,			CONCAT(s.name, '-', p.row_number, '-', p.col_number) AS position		FROM storage_position p LEFT JOIN storage s ON p.storage_id=s.id LEFT JOIN users u ON p.user_id=u.id WHERE storage_id = #{storageId}	</select>		<update id="emptyStorage">		UPDATE storage_position SET user_id=NULL, available = '1', modify_date=NOW() WHERE id = #{id}	</update>	<delete id="deleteByStorageId">		DELETE FROM storage_position WHERE storage_id = #{storageId}	</delete>		<select id="findSamePackage" resultMap="basic_result_map">		SELECT * from storage_position p LEFT JOIN `storage` s ON p.storage_id=s.id LEFT JOIN storage_position_record r ON p.id=r.storage_position_id		WHERE s.type IN ('-1' ${storage.type}) AND r.relate_id = #{relateId}	</select></mapper>