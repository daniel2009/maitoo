/*
 * Facebox (for jQuery)
 * version: 1.2 (05/05/2008)
 * @requires jQuery v1.2 or later
 *
 * Examples at http://famspam.com/facebox/
 *
 * Licensed under the MIT:
 *   http://www.opensource.org/licenses/mit-license.php
 *
 * Copyright 2007, 2008 Chris Wanstrath [ chris@ozmm.org ]
 *
 * Usage:
 *  
 *  jQuery(document).ready(function() {
 *    jQuery('a[rel*=facebox]').facebox() 
 *  })
 *
 *  <a href="#terms" rel="facebox">Terms</a>
 *    Loads the #terms div in the box
 *
 *  <a href="terms.html" rel="facebox">Terms</a>
 *    Loads the terms.html page in the box
 *
 *  <a href="terms.png" rel="facebox">Terms</a>
 *    Loads the terms.png image in the box
 *
 *
 *  You can also use it programmatically:
 * 
 *    jQuery.facebox('some html')
 *
 *  The above will open a facebox with "some html" as the content.
 *    
 *    jQuery.facebox(function($) { 
 *      $.get('blah.html', function(data) { $.facebox(data) })
 *    })
 *
 *  The above will show a loading screen before the passed function is called,
 *  allowing for a better ajaxy experience.
 *
 *  The facebox function can also display an ajax page or image:
 *  
 *    jQuery.facebox({ ajax: 'remote.html' })
 *    jQuery.facebox({ image: 'dude.jpg' })
 *
 *  Want to close the facebox?  Trigger the 'close.facebox' document event:
 *
 *    jQuery(document).trigger('close.facebox')
 *
 *  Facebox also has a bunch of other hooks:
 *
 *    loading.facebox
 *    beforeReveal.facebox
 *    reveal.facebox (aliased as 'afterReveal.facebox')
 *    init.facebox
 *
 *  Simply bind a function to any of these hooks:
 *
 *   $(document).bind('reveal.facebox', function() { ...stuff to do after the facebox and contents are revealed... })
 *
 */
(function($) {
  $.facebox = function(data, klass) {
    $.facebox.loading()

    if (data.ajax) fillFaceboxFromAjax(data.ajax)
    else if (data.image) fillFaceboxFromImage(data.image)
    else if (data.div) fillFaceboxFromHref(data.div)
    else if ($.isFunction(data)) data.call($)
    else $.facebox.reveal(data, klass)
  }

  /*
   * Public, $.facebox methods
   */

  $.extend($.facebox, {
    settings: {
      opacity      : 0,
      overlay      : true,
      imageTypes   : [ 'png', 'jpg', 'jpeg', 'gif' ],
      faceboxHtml  : '\
    <div id="facebox" style="display:none;"> \
      <div class="popup"> \
        <table> \
          <tbody> \
            <tr> \
              <td class="tl"/><td class="b"/><td class="tr"/> \
            </tr> \
            <tr> \
              <td class="b"/> \
              <td class="body"> \
                <div class="content"> \
                </div> \
                <div class="footer"> \
                </div> \
              </td> \
              <td class="b"/> \
            </tr> \
            <tr> \
              <td class="bl"/><td class="b"/><td class="br"/> \
            </tr> \
          </tbody> \
        </table> \
      </div> \
    </div>'
    },

    loading: function() {
      init()
      if ($('#facebox .loading').length == 1) return true
      showOverlay()

      $('#facebox .content').empty()
      $('#facebox .body').children().hide().end().
        append('<div class="loading"></div>')

      $('#facebox').css({
        top:	getPageScroll()[1] + (getPageHeight() / 10),
        left:	385.5
      }).show()

      $(document).bind('keydown.facebox', function(e) {
        if (e.keyCode == 27) $.facebox.close()
        return true
      })
      $(document).trigger('loading.facebox')
    },

    reveal: function(data, klass) {
      $(document).trigger('beforeReveal.facebox')
      if (klass) $('#facebox .content').addClass(klass)
      $('#facebox .content').append(data)
      
      // 门市件中添加新用户
      $("#facebox .content :submit[name='bt_add_user']").click(function(){
    	  var name = $("#facebox .content :text[name='name']").val();
  		  var password = $("#facebox .content :password[name='password']").val();
  		  var email = $("#facebox .content :text[name='email']").val();
		  var realName = $("#facebox .content :text[name='realName']").val();
		  var phone = $("#facebox .content :text[name='phone']").val();
		  var qq = $("#facebox .content :text[name='qq']").val();
		  var country = $("#facebox .content :text[name='country']").val();
		  var address = $("#facebox .content :text[name='address']").val();
		  var type = $("#facebox .content select[name='type']").val();
		  if (!checkUserNickName(name)) {
				alert("用户名格式不正确，用户名必须由2到40个字符组成，请重新输入！");
			} else if (!checkUserPassword(password)) {
				alert("密码格式不正确，密码必须由6到20个可见字符组成，请重新输入！");
			} else if (!checkUserEmailRegex(email)) {
				alert("邮箱格式不正确，请重新输入！");
			} else if (!checkUserRealName(realName)) {
				alert("真实姓名格式不正确，最长长度为20个字符，请重新输入！");
			} else if (!checkUserPhone(phone)) {
				alert("手机号码格式不正确，最长长度为20个字符，请重新输入！");
			} else if (!checkUserQQ(qq)) {
				alert("qq号码格式不正确，qq号码必须由数字组成，最长长度为20，请重新输入！");
			} else if (!checkUserCountry(country)) {
				alert("国家信息格式不正确，国家信息最长为20个字符，请重新输入！");
			} else if (!checkUserAddress(address)) {
				alert("地址信息格式不正确，地址信息最长为150个字符，请重新输入！");
			} else {
				$.ajax( {
					type : "post",
					url : admin_add_user_url,
					data : {
						"name" : name,
						"email" : email,
						"password" : password,
						"realName" : realName,
						"phone" : phone,
						"qq" : qq,
						"country" : country,
						"address" : address,
						"type" : type
					},
					success : function(response) {
						var code = response.code;
						if ("200" == code) {
							alert("添加成功");
							var id = response.data.id;
							loadMsjUserList("", id);
							$(document).trigger('close.facebox');
						} else if ("607" == code) {
							alert("您没有权限进行此操作");
							logout();
						} else {
							alert("添加会员失败，失败原因:" + response.message);
						}
						return false;
					}
				});
			}
		  return false;
      })
      
      // 异常运单中添加异常运单
      $("#facebox .content :submit[name='bt_add_error_order_info']").click(function(){
    	  var oid = $("#facebox .content :text[name='oid']").val();
  		  var content = $("#facebox .content textarea[name='content']").val();
  		  if (!checkErrorOrderInfoOrderId(oid)) {
  			  alert("运单号输入格式错误!");
  		  } else if (!checkErrorOrderInfoContent(content)) {
  			  alert("异常件的内容信息不能为空，而且最长长度为200个字符！");
  		  } else {
  			$.ajax( {
				type : "post",
				url : admin_error_order_add_url,
				data : {
					"orderId" : oid,
					"content" : content
				},
				success : function(response) {
					var code = response.code;
					if ("200" == code) {
						alert("添加成功");
						$("#nav72").click();
						$(document).trigger('close.facebox');
					} else if ("607" == code) {
						alert("您没有权限进行此操作");
						logout();
					} else {
						alert("添加异常件失败，失败原因:" + response.message);
					}
					return false;
				}
			});
  		  }
  		  return false;
      });
      
      $("#facebox .content :submit[name='v_btn_order']").click(function(){
    	  var oid = $("#facebox .content :text[name='oid']").val();
    	  if (oid==null||oid=='') {
    		  // 运单号不能为空
    		  $("#facebox .content span[name='msg']").html("请输入运单号，运单号不能为空！");
    	  } else{
    		  $.ajax({
				type:"get",
				url:admin_order_get_one_url,
				data:{
					"oid":oid
				},
				success:function(response){
					var code = response.code;
					var message = '';
					if("200" == code) {
						if (response.data!=null) {
							message = "验证成功";
						} else {
							message = "数据库中没有对应id的运单记录!";
						}
					} else if ("607" == code) {
						alert("Session过期，您没有权限进行此操作，请重新登录！");
						logout();
					} else {
						message = "验证运单号失败，原因是：" + response.message;
					}
					$("#facebox .content span[name='msg']").html(message);
				}
			});
    	  }
    	  return false;
      });

      // 异常预报运单中添加异常预报运单
      $("#facebox .content :submit[name='bt_add_error_torder_info']").click(function(){
    	  var toid = $("#facebox .content :text[name='toid']").val();
    	  var content = $("#facebox .content textarea[name='content']").val();
    	  if (!checkErrorTOrderInfoOrderId(toid)) {
    		  alert("预报运单号输入格式错误!");
    	  } else if (!checkErrorTOrderInfoContent(content)) {
    		  alert("异常件的内容信息不能为空，而且最长长度为200个字符！");
    	  } else {
    		  $.ajax( {
    			  type : "post",
    			  url : admin_error_torder_add_url,
    			  data : {
    			  "transhId" : toid,
    			  "content" : content
    		  },
    		  success : function(response) {
    			  var code = response.code;
    			  if ("200" == code) {
    				  alert("添加成功");
    				  $("#nav73").click();
    				  $(document).trigger('close.facebox');
    			  } else if ("607" == code) {
    				  alert("您没有权限进行此操作");
    				  logout();
    			  } else {
    				  alert("添加异常件失败，失败原因:" + response.message);
    			  }
    			  return false;
    		  }
    		  });
    	  }
    	  return false;
      });
      
      $("#facebox .content :submit[name='v_btn_torder']").click(function(){
    	  var toid = $("#facebox .content :text[name='toid']").val();
    	  if (toid==null|| toid=='') {
    		  // 预订运单号不能为空
    		  $("#facebox .content span[name='msg']").html("请输入预订单号，预订单号不能为空！");
    	  } else{
    		  $.ajax({
    			  type:"get",
    			  url:admin_tranship_show_one_url,
    			  data:{
    			  "id":toid
    		  },
    		  success:function(response){
    			  var code = response.code;
    			  var message = '';
    			  if("200" == code) {
    				  if (response.data!=null) {
    					  var transh = response.data;
    					  if (transh.state == "0") {
    						  message = "验证成功";
    					  } else {
    						  var s = '完成';
    						  if (transh.state == "1") {
    							  s = "入库";
    						  } else if (transh.state == "2") {
    							  s = "包裹异常";
    						  }
    						  message = "该预订单处于<strong>" + s + "</strong>状态，不能进行修改为异常件操作，只有处于未入库状态的包裹才可以添加异常件！";
    					  }
    				  } else {
    					  message = "数据库中没有对应id的预报运单记录!";
    				  }
    			  } else if ("607" == code) {
    				  alert("Session过期，您没有权限进行此操作，请重新登录！");
    				  logout();
    			  } else {
    				  message = "验证预报运单号失败，原因是：" + response.message;
    			  }
    			  $("#facebox .content span[name='msg']").html(message);
    		  }
    		  });
    	  }
    	  return false;
      });
      
      $("#facebox .content :reset").click(function(){
    	  $(document).trigger('close.facebox')
    	  return false;
      });
      
      $('#facebox .loading').remove()
      $('#facebox .body').children().fadeIn('normal')
      $('#facebox').css('left', $(window).width() / 2 - ($('#facebox table').width() / 2))
      $(document).trigger('reveal.facebox').trigger('afterReveal.facebox')
    },

    close: function() {
      $(document).trigger('close.facebox')
      return false
    }
  })

  /*
   * Public, $.fn methods
   */

  $.fn.facebox = function(settings) {
    init(settings)

    function clickHandler() {
      $.facebox.loading(true)

      // support for rel="facebox.inline_popup" syntax, to add a class
      // also supports deprecated "facebox[.inline_popup]" syntax
      var klass = this.rel.match(/facebox\[?\.(\w+)\]?/)
      if (klass) klass = klass[1]

      fillFaceboxFromHref(this.href, klass)
      return false
    }

    return this.click(clickHandler)
  }

  /*
   * Private methods
   */

  // called one time to setup facebox on this page
  function init(settings) {
    if ($.facebox.settings.inited) return true
    else $.facebox.settings.inited = true

    $(document).trigger('init.facebox')
    makeCompatible()

    var imageTypes = $.facebox.settings.imageTypes.join('|')
    $.facebox.settings.imageTypesRegexp = new RegExp('\.' + imageTypes + '$', 'i')

    if (settings) $.extend($.facebox.settings, settings)
    $('body').append($.facebox.settings.faceboxHtml)

    var preload = [ new Image(), new Image() ]
    preload[0].src = $.facebox.settings.closeImage
    preload[1].src = $.facebox.settings.loadingImage

    $('#facebox').find('.b:first, .bl, .br, .tl, .tr').each(function() {
      preload.push(new Image())
      preload.slice(-1).src = $(this).css('background-image').replace(/url\((.+)\)/, '$1')
    })

    $('#facebox .close').click($.facebox.close)
    $('#facebox .close_image').attr('src', $.facebox.settings.closeImage)
  }
  
  // getPageScroll() by quirksmode.com
  function getPageScroll() {
    var xScroll, yScroll;
    if (self.pageYOffset) {
      yScroll = self.pageYOffset;
      xScroll = self.pageXOffset;
    } else if (document.documentElement && document.documentElement.scrollTop) {	 // Explorer 6 Strict
      yScroll = document.documentElement.scrollTop;
      xScroll = document.documentElement.scrollLeft;
    } else if (document.body) {// all other Explorers
      yScroll = document.body.scrollTop;
      xScroll = document.body.scrollLeft;	
    }
    return new Array(xScroll,yScroll) 
  }

  // Adapted from getPageSize() by quirksmode.com
  function getPageHeight() {
    var windowHeight
    if (self.innerHeight) {	// all except Explorer
      windowHeight = self.innerHeight;
    } else if (document.documentElement && document.documentElement.clientHeight) { // Explorer 6 Strict Mode
      windowHeight = document.documentElement.clientHeight;
    } else if (document.body) { // other Explorers
      windowHeight = document.body.clientHeight;
    }	
    return windowHeight
  }

  // Backwards compatibility
  function makeCompatible() {
    var $s = $.facebox.settings

    $s.loadingImage = $s.loading_image || $s.loadingImage
    $s.closeImage = $s.close_image || $s.closeImage
    $s.imageTypes = $s.image_types || $s.imageTypes
    $s.faceboxHtml = $s.facebox_html || $s.faceboxHtml
  }

  // Figures out what you want to display and displays it
  // formats are:
  //     div: #id
  //   image: blah.extension
  //    ajax: anything else
  function fillFaceboxFromHref(href, klass) {
    // div
    if (href.match(/#/)) {
      var url    = window.location.href.split('#')[0]
      var target = href.replace(url,'')
      $.facebox.reveal($(target).clone().show(), klass)

    // image
    } else if (href.match($.facebox.settings.imageTypesRegexp)) {
      fillFaceboxFromImage(href, klass)
    // ajax
    } else {
      fillFaceboxFromAjax(href, klass)
    }
  }

  function fillFaceboxFromImage(href, klass) {
    var image = new Image()
    image.onload = function() {
      $.facebox.reveal('<div class="image"><img src="' + image.src + '" /></div>', klass)
    }
    image.src = href
  }

  function fillFaceboxFromAjax(href, klass) {
    $.get(href, function(data) { $.facebox.reveal(data, klass) })
  }

  function skipOverlay() {
    return $.facebox.settings.overlay == false || $.facebox.settings.opacity === null 
  }

  function showOverlay() {
    if (skipOverlay()) return

    if ($('facebox_overlay').length == 0) 
      $("body").append('<div id="facebox_overlay" class="facebox_hide"></div>')

    $('#facebox_overlay').hide().addClass("facebox_overlayBG")
      .css('opacity', $.facebox.settings.opacity)
      .click(function() { $(document).trigger('close.facebox') })
      .fadeIn(200)
    return false
  }

  function hideOverlay() {
    if (skipOverlay()) return

    $('#facebox_overlay').fadeOut(200, function(){
      $("#facebox_overlay").removeClass("facebox_overlayBG")
      $("#facebox_overlay").addClass("facebox_hide") 
      $("#facebox_overlay").remove()
    })
    
    return false
  }

  /*
   * Bindings
   */

  $(document).bind('close.facebox', function() {
    $(document).unbind('keydown.facebox')
    $('#facebox').fadeOut(function() {
      $('#facebox .content').removeClass().addClass('content')
      hideOverlay()
      $('#facebox .loading').remove()
    })
  })

})(jQuery);
