<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.meitao.dao.MorderDao">	<resultMap id="basic_result_map" type="com.meitao.model.M_order">		<id column="id" property="id" javaType="String" />		<result column="order_id" property="orderId" javaType="String"/>		<result column="user_id" property="userId" javaType="String" />		<result column="type" property="type" javaType="String"/>		<result column="payWay" property="payWay" javaType="String" />		<result column="totalmoney" property="totalmoney" javaType="String" />		<result column="weight" property="weight" javaType="String" />		<result column="sjweight" property="sjweight" javaType="String" />				<result column="other" property="other" javaType="String" />		<result column="quantity" property="quantity" javaType="String" />		<result column="tariff" property="tariff" javaType="String" />		<result column="value" property="value" javaType="String" />		<result column="insurance" property="insurance" javaType="String" />		<result column="remark" property="remark" javaType="String" />		<result column="channelId" property="channelId" javaType="String" />		<result column="channelName" property="channelName" javaType="String" />				<result column="user_price" property="user_price" javaType="String" />		<result column="i_employeeId" property="i_employeeId" javaType="String" />		<result column="i_state" property="i_state" javaType="String" />		<result column="i_storeId" property="i_storeId" javaType="String" />		<result column="i_employeeName" property="i_employeeName" javaType="String" />		<result column="i_storeName" property="i_storeName" javaType="String" />		<result column="i_date" property="i_date" javaType="String" />		<result column="huitongNo" property="huitongNo" javaType="String" />		<result column="i_weight" property="i_weight" javaType="String" />						<result column="state" property="state" javaType="String"/>		<result column="storeId" property="storeId" javaType="String" />		<result column="storeName" property="storeName" javaType="String" />						<result column="flyno" property="flyno"			javaType="String" />		<result column="third_pns" property="thirdPNS" javaType="String" />		<result column="third_no" property="thirdNo" javaType="String" />			<result column="sorderId" property="sorderId" javaType="String" />						<result column="employeeId" property="employeeId" javaType="String" />		<result column="employeeName" property="employeeName" javaType="String" />				<result column="payornot" property="payornot" javaType="String" />		<result column="qremark" property="qremark" javaType="String" />		<result column="totalcost" property="totalcost" javaType="String" />				<result column="freezId" property="freezId" javaType="String" />		<result column="tcost" property="tcost" javaType="String" />		<result column="tmoney" property="tmoney" javaType="String" />		<result column="positionId" property="positionId" javaType="String" />						<result column="create_date" property="createDate"			javaType="String" />		<result column="modify_date" property="modifyDate"			javaType="String" />		<result column="suserId" property="suserId"			javaType="String" />		<result column="ruserId" property="ruserId" javaType="String" />		<result column="pay_date" property="payDate" javaType="String" />				<result column="confirm_user_pay" property="confirm_user_pay" javaType="String" />					  <association property="user" column="user_id"			select="com.meitao.dao.UserDao.getUserById"></association>		<association property="suser" column="suserId"			select="com.meitao.dao.Send_UserDao.getById"></association>		<association property="ruser" column="ruserId"			select="com.meitao.dao.Receive_UserDao.getById"></association>		<collection property="detail" column="order_id"			select="com.meitao.dao.MdetailDao.getAllByOrderId"></collection>					</resultMap>		<resultMap id="basic_ruser_result_map" type="com.meitao.model.M_order">		<id column="id" property="id" javaType="String" />		<result column="order_id" property="orderId" javaType="String"/>				<result column="ruserId" property="ruserId" javaType="String" />		<association property="ruser" column="ruserId"			select="com.meitao.dao.Receive_UserDao.getById"></association>	</resultMap>	<!-- 路由返回的必要数据 -->	<resultMap id="basic_route_result_map" type="com.meitao.model.M_order">		<id column="id" property="id" javaType="String" />		<result column="state" property="state" javaType="String"/>		<result column="third_no" property="thirdNo" javaType="String" />			<result column="sorderId" property="sorderId" javaType="String" />			<result column="third_pns" property="thirdPNS" javaType="String" />		<result column="user_id" property="userId" javaType="String" />	</resultMap>			<!-- 返回航班的必要数据 -->	<resultMap id="basic_fly_result_map" type="com.meitao.model.M_order">		<id column="id" property="id" javaType="String" />		<result column="state" property="state" javaType="String"/>		<result column="flyno" property="flyno" javaType="String" />			<result column="order_id" property="orderId" javaType="String" />		</resultMap>		<!-- 根据支付时间返回运单信息-->	<resultMap id="basic_mt_result_map" type="com.meitao.model.M_order">		<id column="id" property="id" javaType="String" />		<result column="state" property="state" javaType="String"/>		<result column="order_id" property="orderId" javaType="String" />		<association property="ruser" column="ruserId"			select="com.meitao.dao.Receive_UserDao.getById"></association>		</resultMap>		<!-- kai 20150913 添加weightKg元素 -->	<insert id="insertMorder" parameterType="com.meitao.model.M_order"		useGeneratedKeys="true" keyProperty="id">		insert into		`m_order`(`order_id`,`user_id`,`type`,		`payWay`,		`totalmoney`, `weight`,		`sjweight`,`other`, `quantity`,		`tariff`,`value`, `insurance`, `remark`,		`channelId`,		`storeId`,`employeeId`,`create_date`,		`modify_date`,`suserId`,`ruserId`,`state`,`pay_date`,`sorderId`,`payornot`,`qremark`,`totalcost`,`user_price`)		values(#{orderId},#{userId},#{type},		#{payWay},		#{totalmoney},		#{weight},		#{sjweight}, #{other},		#{quantity},		#{tariff},		#{value},		#{insurance}, #{remark},		#{channelId},		#{storeId}, #{employeeId},		#{createDate},		#{modifyDate},#{suserId},#{ruserId},#{state},#{payDate},#{sorderId},#{payornot},#{qremark},#{totalcost},#{user_price})	</insert>	<!-- kai 20160624 添加添加转运参数元素 -->	<insert id="insertTranMorder" parameterType="com.meitao.model.M_order"		useGeneratedKeys="true" keyProperty="id">		insert into		`m_order`(`order_id`,`user_id`,`type`,		`payWay`,		`totalmoney`, `weight`,		`sjweight`,`other`, `quantity`,		`tariff`,`value`, `insurance`, `remark`,		`channelId`,		`storeId`,`employeeId`,`create_date`,		`modify_date`,`suserId`,`ruserId`,`state`,`pay_date`,`sorderId`,`payornot`,`qremark`,`totalcost`,`user_price`,		`freezId`,`tcost`,`tmoney`		)		values(#{orderId},#{userId},#{type},		#{payWay},		#{totalmoney},		#{weight},		#{sjweight}, #{other},		#{quantity},		#{tariff},		#{value},		#{insurance}, #{remark},		#{channelId},		#{storeId}, #{employeeId},		#{createDate},		#{modifyDate},#{suserId},#{ruserId},#{state},#{payDate},#{sorderId},#{payornot},#{qremark},#{totalcost},#{user_price},		#{freezId},#{tcost},#{tmoney}		)	</insert>				<update id="updateOrderid" parameterType="java.lang.String"> 	update m_order set order_id=#{orderId}		 where id=#{id} </update>		 		 	<update id="modifyMorderPay">		update `m_order`		set `state`=#{state},		`pay_date`=#{payDate},		`payornot`=#{payornot}		where `id` in		<foreach collection="list" item="id" open="(" close=")"			separator=",">			${id}		</foreach>	</update>		<select id="getById" parameterType="java.lang.String" resultMap="basic_result_map">		select * from m_order where id=#{id} 		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>	</select>		<select id="getByjinId" parameterType="java.lang.String" resultMap="basic_result_map">		select * from m_order where id=#{id} 		<if test="storeId!=null and storeId!=''">			and (storeId = #{storeId} or i_storeId = #{storeId})		</if>	</select>		<select id="getByOrderId" parameterType="java.lang.String" resultMap="basic_result_map">		select * from m_order where order_id=#{orderId} 		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>		limit 1	</select>			<select id="countOfSearchMOrders" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order`		left join `employees` as e		on e.id=`m_order`.employeeId		left join `warehouse` as w		on w.id=`m_order`.storeId		left join `channels` as ch		on ch.id=`m_order`.channelId		<if test="userinfo!=null and userinfo!=''">			left join `users` as u			on u.id=`m_order`.user_id			left join `send_users` as su			on su.id=`m_order`.suserId			left join `receive_users` as ru			on ru.id=`m_order`.ruserId		</if>				<if test="commudityinfo!=null and commudityinfo!=''">			left join `m_detail` as md			on md.order_id=`m_order`.order_id		</if>				<where>					<if test="oid!=null and oid!=''">				`m_order`.`order_id` like #{oid} 			</if>			<if test="sod!=null and sod!=''">				and `m_order`.`sorderId` like #{sod} 			</if>			<if test="god!=null and god!=''">				and `m_order`.`third_no` like #{god} 			</if>			<if test="flyno!=null and flyno!=''">				and `m_order`.`flyno` =#{flyno} 			</if>			<if test="wid!=null and wid!=''">				and `m_order`.`storeId` =#{wid} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="userinfo!=null and userinfo!=''">			  and (u.email like #{userinfo} or u.nick_name like #{userinfo} or u.real_name like #{userinfo} or u.phone like #{userinfo} or u.qq like #{userinfo}			  or su.name like #{userinfo} or su.phone like #{userinfo} or su.email like #{userinfo} or su.company like #{userinfo}			  or ru.name like #{userinfo} or ru.phone like #{userinfo} or ru.email like #{userinfo} or ru.company like #{userinfo}			  )			</if>			<if test="commudityinfo!=null and commudityinfo!=''">			and (md.productName like #{commudityinfo} or md.brands like #{commudityinfo} or md.name like #{commudityinfo} or md.remark like #{commudityinfo})			</if>			<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<if test="type!=null and type!=''">				and `m_order`.`type` =#{type} 			</if>			<if test="payway!=null and payway!=''">				and `m_order`.`payWay` =#{payway} 			</if>			<if test="sdate!=null and sdate!=''">				and `m_order`.`create_date` <![CDATA[>=]]>				#{sdate}			</if>			<if test="edate!=null and edate!=''">				and `m_order`.`create_date` <![CDATA[<=]]>				#{edate}			</if>			<if test="psdate!=null and psdate!=''">				and `m_order`.`pay_date` <![CDATA[>=]]>				#{psdate}			</if>			<if test="pedate!=null and pedate!=''">				and `m_order`.`pay_date` <![CDATA[<=]]>				#{pedate}			</if>			<if test="cardurl!=null and cardurl!=''">				and (ru.`cardurl` !="" and ru.`cardurl` !='null')			</if>			<if test="cardother!=null and cardother!=''">				and (ru.`cardother` !="" and ru.`cardother` !='null')			</if>			<if test="cardtogether!=null and cardtogether!=''">				and (ru.`cardtogether` !="" and ru.`cardtogether` !='null')			</if>			<if test="uploadflag!=null and uploadflag!=''">				and ru.uploadflag=#{uploadflag}			</if>			<if test="cardid!=null and cardid!=''">				and (ru.`cardid` !="" and ru.`cardid` !='null')			</if>			<if test="payornot!=null and payornot!=''">				and  `m_order`.`payornot` = #{payornot}			</if>		</where>	</select>	<select id="SearchMOrders" resultMap="basic_result_map">		select distinct `m_order`.* ,e.account AS employeeName,w.name AS storeName,ch.name AS channelName		from `m_order`		left join `employees` as e		on e.id=`m_order`.employeeId		left join `warehouse` as w		on w.id=`m_order`.storeId		left join `channels` as ch		on ch.id=`m_order`.channelId		<if test="userinfo!=null and userinfo!=''">			left join `users` as u			on u.id=`m_order`.user_id			left join `send_users` as su			on su.id=`m_order`.suserId			left join `receive_users` as ru			on ru.id=`m_order`.ruserId		</if>				<if test="commudityinfo!=null and commudityinfo!=''">			left join `m_detail` as md			on md.order_id=`m_order`.order_id		</if>				<where>					<if test="oid!=null and oid!=''">				`m_order`.`order_id` like #{oid} 			</if>			<if test="sod!=null and sod!=''">				and `m_order`.`sorderId` like #{sod} 			</if>			<if test="god!=null and god!=''">				and `m_order`.`third_no` like #{god} 			</if>			<if test="flyno!=null and flyno!=''">				and `m_order`.`flyno` =#{flyno} 			</if>			<if test="wid!=null and wid!=''">				and `m_order`.`storeId` =#{wid} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="userinfo!=null and userinfo!=''">			  and (u.email like #{userinfo} or u.nick_name like #{userinfo} or u.real_name like #{userinfo} or u.phone like #{userinfo} or u.qq like #{userinfo}			  or su.name like #{userinfo} or su.phone like #{userinfo} or su.email like #{userinfo} or su.company like #{userinfo}			  or ru.name like #{userinfo} or ru.phone like #{userinfo} or ru.email like #{userinfo} or ru.company like #{userinfo}			  )			</if>			<if test="commudityinfo!=null and commudityinfo!=''">			and (md.productName like #{commudityinfo} or md.brands like #{commudityinfo} or md.name like #{commudityinfo} or md.remark like #{commudityinfo})			</if>			<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<if test="type!=null and type!=''">				and `m_order`.`type` =#{type} 			</if>			<if test="payway!=null and payway!=''">				and `m_order`.`payWay` =#{payway} 			</if>			<if test="sdate!=null and sdate!=''">				and `m_order`.`create_date` <![CDATA[>=]]>				#{sdate}			</if>			<if test="edate!=null and edate!=''">				and `m_order`.`create_date` <![CDATA[<=]]>				#{edate}			</if>			<if test="psdate!=null and psdate!=''">				and `m_order`.`pay_date` <![CDATA[>=]]>				#{psdate}			</if>			<if test="pedate!=null and pedate!=''">				and `m_order`.`pay_date` <![CDATA[<=]]>				#{pedate}			</if>			<if test="cardurl!=null and cardurl!=''">				and (ru.`cardurl` !="" and ru.`cardurl` !='null')			</if>			<if test="cardother!=null and cardother!=''">				and (ru.`cardother` !="" and ru.`cardother` !='null')			</if>			<if test="cardtogether!=null and cardtogether!=''">				and (ru.`cardtogether` !="" and ru.`cardtogether` !='null')			</if>			<if test="uploadflag!=null and uploadflag!=''">				and ru.uploadflag=#{uploadflag}			</if>			<if test="cardid!=null and cardid!=''">				and (ru.`cardid` !="" and ru.`cardid` !='null')			</if>			<if test="payornot!=null and payornot!=''">				and  `m_order`.`payornot` = #{payornot}			</if>		</where>		order by `m_order`.`create_date` desc		limit		#{index},#{size}	</select>		<update id="updateSorderid">		update `m_order`		set `sorderId`=#{sorderId},		`create_date`=#{createDate}		where `id`=#{id}	</update>		<delete id="deleteByIds">		delete from `m_order`		where `id` in		<foreach collection="ids" item="id" open="(" close=")"			separator=",">			#{id}		</foreach>		and state in		<foreach collection="states" item="state" open="(" close=")"			separator=",">			#{state}		</foreach>		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>	</delete>		<select id="getOrderIdsbyIds"		resultType="java.lang.String">		select `m_order`.order_id		from `m_order` 		where `id` in		<foreach collection="ids" item="id" open="(" close=")"			separator=",">			#{id}		</foreach>	</select>			<update id="modifyroutestate" parameterType="java.lang.String"> 	update m_order set `state`=#{state},		`third_pns`=#{thirdPNS},		`third_no`=#{thirdNo}		where id=#{id}		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>	</update>		 		 	<select id="getOrderIdbyId"		resultType="java.lang.String">		select `m_order`.order_id		from `m_order` 		where id=#{id}	</select>		<select id="getRouteArgsbyOrderId" parameterType="java.lang.String" resultMap="basic_route_result_map">		select * from m_order where order_id=#{orderId} 		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>	</select>		<update id="modifyroutestatebyorderId" parameterType="java.lang.String"> 	update m_order set		`modify_date`=#{modifyDate}		 <if test="state!=null and state!=''">			,`state`=#{state}		</if>		<if test="thirdPNS!=null and thirdPNS!=''">			,`third_pns`=#{thirdPNS}		</if>		<if test="thirdNo!=null and thirdNo!=''">			,`third_no`=#{thirdNo}		</if>		where `order_id`=#{orderId}		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>	</update>		<select id="getRuser" parameterType="java.lang.String" resultMap="basic_ruser_result_map">		select m_order.* from m_order where order_id=#{orderId} 		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>		limit 1	</select>		<select id="getRuserbyid" parameterType="java.lang.String" resultMap="basic_ruser_result_map">		select m_order.* from m_order where id=#{id} 		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>		limit 1	</select>		<select id="getFlyArgsbyOrderId" parameterType="java.lang.String" resultMap="basic_fly_result_map">		select * from m_order where order_id=#{orderId} 		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>		limit 1	</select>		<update id="modifyMorderFlyInfo">		update `m_order`		set 		<if test="state!=null and state!=''">			`state`=#{state},		</if>		`modify_date`=#{modifyDate},		`flyno` =#{flyno} 		where `order_id`=#{orderId}		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>	</update>		<select id="countOfflynos" resultType="java.lang.Integer">		select count(distinct `m_order`.`order_id`) 		from `m_order`		where `flyno`=#{flyno} 	</select>		<select id="searchMordersbyflyno" resultMap="basic_fly_result_map">		select distinct `m_order`.* from `m_order`		where `flyno`=#{flyno} and `m_order`.`state`<![CDATA[>=]]> '0'	</select>		<update id="modifyMorderflightnobyflightno">		update `m_order`		set 		`flyno`=#{newflyno},			`modify_date`=#{date}		where `flyno` =#{flyno} and `m_order`.`state`<![CDATA[>=]]> '0'			</update>			<!-- 搜索门店运单的运单数量 -->	<select id="countOfSearchMsMOrders" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order`		left join `channels` as ch		on ch.id=`m_order`.channelId		<if test="userinfo!=null and userinfo!=''">			left join `users` as u			on u.id=`m_order`.user_id			left join `send_users` as su			on su.id=`m_order`.suserId			left join `receive_users` as ru			on ru.id=`m_order`.ruserId		</if>		<where>			`m_order`.`state` <![CDATA[<=]]> '2'			<if test="empid!=null and empid!=''">				and `m_order`.`employeeId` =#{empid} 			</if>			<if test="storeId!=null and storeId!=''">				and `m_order`.`storeId` =#{storeId} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="userinfo!=null and userinfo!=''">			  and (u.email like #{userinfo} or u.nick_name like #{userinfo} or u.real_name like #{userinfo} or u.phone like #{userinfo} or u.qq like #{userinfo}			  or su.name like #{userinfo} or su.phone like #{userinfo} or su.email like #{userinfo} or su.company like #{userinfo}			  or ru.name like #{userinfo} or ru.phone like #{userinfo} or ru.email like #{userinfo} or ru.company like #{userinfo}			  )			</if>						<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>		<!--  				<if test="time!=null and time!=''">				and  `m_order`.`modify_date` <![CDATA[>=]]> #{time}			</if>			 -->				 <if test="time!=null and time!=''">				and  `m_order`.`pay_date` <![CDATA[>=]]> #{time}			</if>			<if test="payornot!=null and payornot!=''">				and  `m_order`.`payornot` = #{payornot}			</if>					</where>	</select>		<!-- 搜索门店运单的运单-->	<select id="SearchMsMOrders" resultMap="basic_result_map">		select distinct `m_order`.* ,ch.name AS channelName		from `m_order`		left join `channels` as ch		on ch.id=`m_order`.channelId		<if test="userinfo!=null and userinfo!=''">			left join `users` as u			on u.id=`m_order`.user_id			left join `send_users` as su			on su.id=`m_order`.suserId			left join `receive_users` as ru			on ru.id=`m_order`.ruserId		</if>		<where>			`m_order`.`state` <![CDATA[<=]]> '2' 			<if test="empid!=null and empid!=''">				and `m_order`.`employeeId` =#{empid} 			</if>			<if test="storeId!=null and storeId!=''">				and `m_order`.`storeId` =#{storeId} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="userinfo!=null and userinfo!=''">			  and (u.email like #{userinfo} or u.nick_name like #{userinfo} or u.real_name like #{userinfo} or u.phone like #{userinfo} or u.qq like #{userinfo}			  or su.name like #{userinfo} or su.phone like #{userinfo} or su.email like #{userinfo} or su.company like #{userinfo}			  or ru.name like #{userinfo} or ru.phone like #{userinfo} or ru.email like #{userinfo} or ru.company like #{userinfo}			  )			</if>						<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<!-- 			<if test="time!=null and time!=''">				and  `m_order`.`modify_date` <![CDATA[>=]]> #{time}			</if> -->			 <if test="time!=null and time!=''">				and  `m_order`.`pay_date` <![CDATA[>=]]> #{time}			</if>			<if test="payornot!=null and payornot!=''">				and  `m_order`.`payornot` = #{payornot}			</if>		</where>		order by `m_order`.`modify_date` desc		limit		#{index},#{size}	</select>		<update id="modifyMsstate" parameterType="java.lang.String"> 		update m_order set `state`=#{state},		`modify_date`=#{ModifyDate}		<if test="empid!=null and empid!=''">			,`employeeId`=#{empid}		</if>				where id=#{id}		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>	</update>		<update id="modifyMsInfo" parameterType="java.lang.String"> 		update m_order set `state`=#{state},		`modify_date`=#{modifyDate},		`payornot`=#{payornot},		`qremark`=#{qremark}		<if test="employeeId!=null and employeeId!=''">			,`employeeId`=#{employeeId}		</if>				where id=#{id}		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>	</update>						<select id="countOfSearchMOrdersbyUser" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order`		<if test="info!=null and info!=''">			left join `send_users` as su			on su.id=`m_order`.suserId			left join `receive_users` as ru			on ru.id=`m_order`.ruserId			left join `m_detail` as md			on md.order_id=`m_order`.order_id		</if>		<where>					<if test="oid!=null and oid!=''">				`m_order`.`order_id` like #{oid} 			</if>			<if test="userId!=null and userId!=''">				and `m_order`.`user_id` = #{userId} 			</if>			<if test="wid!=null and wid!=''">				and `m_order`.`storeId` =#{wid} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="info!=null and info!=''">			  and (su.name like #{info} or su.phone like #{info} or su.email like #{info} or su.company like #{info}			  or su.state like #{info} or su.city like #{info} or su.dist like #{info} or su.address like #{info}			  or ru.name like #{info} or ru.phone like #{info} or ru.email like #{info} or ru.company like #{info}			  or ru.state like #{info} or ru.city like #{info} or ru.dist like #{info} or ru.address like #{info}			  or md.productName like #{info} or md.brands like #{info} or md.name like #{info} or md.remark like #{info}			  )			</if>					<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<if test="type!=null and type!=''">				and `m_order`.`type` =#{type} 			</if>			<if test="payornot!=null and payornot!=''">				and  `m_order`.`payornot` = #{payornot}			</if>		</where>	</select>	<select id="SearchMOrdersbyUser" resultMap="basic_result_map">		select distinct `m_order`.*		from `m_order`		<if test="info!=null and info!=''">			left join `send_users` as su			on su.id=`m_order`.suserId			left join `receive_users` as ru			on ru.id=`m_order`.ruserId			left join `m_detail` as md			on md.order_id=`m_order`.order_id		</if>		<where>					<if test="oid!=null and oid!=''">				`m_order`.`order_id` like #{oid} 			</if>			<if test="userId!=null and userId!=''">				and `m_order`.`user_id` = #{userId} 			</if>			<if test="wid!=null and wid!=''">				and `m_order`.`storeId` =#{wid} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="info!=null and info!=''">			  and (su.name like #{info} or su.phone like #{info} or su.email like #{info} or su.company like #{info}			  or su.state like #{info} or su.city like #{info} or su.dist like #{info} or su.address like #{info}			  or ru.name like #{info} or ru.phone like #{info} or ru.email like #{info} or ru.company like #{info}			  or ru.state like #{info} or ru.city like #{info} or ru.dist like #{info} or ru.address like #{info}			  or md.productName like #{info} or md.brands like #{info} or md.name like #{info} or md.remark like #{info}			  )			</if>					<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<if test="type!=null and type!=''">				and `m_order`.`type` =#{type} 			</if>			<if test="payornot!=null and payornot!=''">				and  `m_order`.`payornot` = #{payornot}			</if>		</where>		order by `m_order`.`create_date` desc		limit		#{index},#{size}	</select>			<update id="modifyUserMOrderPay">		update `m_order`		set 		`m_order`.`payornot` = #{payornot},		`m_order`.`modify_date`=#{modifyDate},		`m_order`.`pay_date`=#{payDate},		`m_order`.`payWay`=#{payWay}		where `id` =#{id} and `user_id` =#{userId}	</update>			<select id="gettotalQ" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order` 		where `user_id` =#{userId}	</select>	<select id="getonlineQ" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order` 		where `user_id` =#{userId} and `state` ='-10'	</select>	<select id="getabandonQ" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order` 		where `user_id` =#{userId} and `state` ='0'	</select>	<select id="getquestionQ" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order` 		where `user_id` =#{userId} and `state` ='1'	</select>	<select id="getnopayQ" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order` 		where `user_id` =#{userId} and `payornot` ='0' and `state` <![CDATA[>=]]> '2'	</select>		<select id="gettranwaitpQ" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order` 		where `user_id` =#{userId} and `state` ='-9'	</select>		<delete id="deleteByIdsandUser">		delete from `m_order`		where `id` in		<foreach collection="ids" item="id" open="(" close=")"			separator=",">			#{id}		</foreach>		and state in		<foreach collection="states" item="state" open="(" close=")"			separator=",">			#{state}		</foreach>		and `user_id` =#{userId}	</delete>		<update id="updateMorder" parameterType="com.meitao.model.M_order">		update `m_order`		set payWay=#{payWay}, totalmoney=#{totalmoney} ,		weight=#{weight} ,sjweight=#{sjweight} ,		other=#{other} ,		quantity=#{quantity} , tariff=#{tariff}		, modify_date=#{modifyDate}, 		`value`=#{value},		`insurance`=#{insurance},		`remark`=#{remark},		`channelId`=#{channelId},		`storeId`=#{storeId},		`employeeId`=#{employeeId},		`suserId`=#{suserId},		`ruserId`=#{ruserId},		`state`=#{state},		`pay_date`=#{payDate},		`payornot`=#{payornot}		where id=#{id} 		<if test="userId!=null and userId!=''">			and user_id=#{userId}		</if>	</update>	<!-- 包含成本的修改 -->	<update id="updateMorder_cost" parameterType="com.meitao.model.M_order">		update `m_order`		set payWay=#{payWay}, totalmoney=#{totalmoney} ,		weight=#{weight} ,sjweight=#{sjweight} ,		other=#{other} ,		quantity=#{quantity} , tariff=#{tariff}		, modify_date=#{modifyDate}, 		`value`=#{value},		`insurance`=#{insurance},		`remark`=#{remark},		`channelId`=#{channelId},		`storeId`=#{storeId},		`employeeId`=#{employeeId},		`suserId`=#{suserId},		`ruserId`=#{ruserId},		`state`=#{state},		`pay_date`=#{payDate},		`payornot`=#{payornot},		`totalcost`=#{totalcost},		`user_price`=#{user_price},		`type`=#{type}		where id=#{id} 		<if test="userId!=null and userId!=''">			and user_id=#{userId}		</if>	</update>				<!-- 处理转运单号修改处理 -->	<update id="updateMorder_tran" parameterType="com.meitao.model.M_order">		update `m_order`		set payWay=#{payWay}, totalmoney=#{totalmoney} ,		weight=#{weight} ,sjweight=#{sjweight} ,		other=#{other} ,		quantity=#{quantity} , tariff=#{tariff}		, modify_date=#{modifyDate}, 		`value`=#{value},		`insurance`=#{insurance},		`remark`=#{remark},		`channelId`=#{channelId},		`storeId`=#{storeId},		`employeeId`=#{employeeId},		`positionId`=#{positionId},		`ruserId`=#{ruserId},		`state`=#{state},		`pay_date`=#{payDate},		`payornot`=#{payornot},		`totalcost`=#{totalcost},		`user_price`=#{user_price},		`qremark`=#{qremark},		`tmoney`=#{tmoney}		where id=#{id} 		<if test="userId!=null and userId!=''">			and user_id=#{userId}		</if>	</update>				<select id="countordersbyid" resultType="java.lang.Integer">		select count(distinct `m_order`.`id`) 		from `m_order`		where `order_id`=#{orderId} 	</select>			<update id="modifyinputstate" parameterType="java.lang.String"> 	update m_order set `state`=#{state},		`i_state`=#{i_state},		`i_employeeId`=#{i_employeeId},		`i_storeId`=#{i_storeId},		`modify_date`=#{modifyDate},		`i_date`=#{i_date},		`i_weight`=#{i_weight}		where `order_id`=#{orderId} and `i_state`!='1'		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>	</update>			<select id="countofSearchinputMOrders" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order`		left join `employees` as e		on e.id=`m_order`.employeeId		left join `warehouse` as w		on w.id=`m_order`.storeId		left join `channels` as ch		on ch.id=`m_order`.channelId				left join `employees` as ie		on ie.id=`m_order`.i_employeeId		left join `warehouse` as iw		on iw.id=`m_order`.i_storeId		<where>					<if test="oid!=null and oid!=''">				`m_order`.`order_id` like #{oid} 			</if>			<if test="wid!=null and wid!=''">				and `m_order`.`storeId` =#{wid} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<if test="i_state!=null and i_state!=''">				and `m_order`.`i_state` =#{i_state} 			</if>			<if test="payway!=null and payway!=''">				and `m_order`.`payWay` =#{payway} 			</if>			<if test="sdate!=null and sdate!=''">				and `m_order`.`i_date` <![CDATA[>=]]>				#{sdate}			</if>			<if test="edate!=null and edate!=''">				and `m_order`.`i_date` <![CDATA[<=]]>				#{edate}			</if>			<if test="i_storeId!=null and i_storeId!=''">				and (`m_order`.`i_storeId` =#{i_storeId} or `m_order`.`storeId` =#{i_storeId})			</if>			<if test="i_employeeId!=null and i_employeeId!=''">				and `m_order`.`i_employeeId` =#{i_employeeId} 			</if>					</where>	</select>	<select id="SearchinputMOrders" resultMap="basic_result_map">		select distinct `m_order`.* ,e.account AS employeeName,w.name AS storeName,ch.name AS channelName,ie.account AS i_employeeName,iw.name AS i_storeName		from `m_order`		left join `employees` as e		on e.id=`m_order`.employeeId		left join `warehouse` as w		on w.id=`m_order`.storeId		left join `channels` as ch		on ch.id=`m_order`.channelId				left join `employees` as ie		on ie.id=`m_order`.i_employeeId		left join `warehouse` as iw		on iw.id=`m_order`.i_storeId				<where>					<if test="oid!=null and oid!=''">				`m_order`.`order_id` like #{oid} 			</if>			<if test="wid!=null and wid!=''">				and `m_order`.`storeId` =#{wid} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<if test="i_state!=null and i_state!=''">				and `m_order`.`i_state` =#{i_state} 			</if>			<if test="payway!=null and payway!=''">				and `m_order`.`payWay` =#{payway} 			</if>			<if test="sdate!=null and sdate!=''">				and `m_order`.`i_date` <![CDATA[>=]]>				#{sdate}			</if>			<if test="edate!=null and edate!=''">				and `m_order`.`i_date` <![CDATA[<=]]>				#{edate}			</if>					<if test="i_storeId!=null and i_storeId!=''">				and (`m_order`.`i_storeId` =#{i_storeId} or `m_order`.`storeId` =#{i_storeId})			</if>			<if test="i_employeeId!=null and i_employeeId!=''">				and `m_order`.`i_employeeId` =#{i_employeeId} 			</if>					</where>		order by `m_order`.`i_date` desc		limit		#{index},#{size}	</select>			<update id="updateHuitongNo" parameterType="java.lang.String"> 	update m_order set huitongNo=#{huitongNo},	`modify_date`=#{modifyDate}		 where id=#{id} </update>		 	<select id="getByOrderIdflag" parameterType="java.lang.String" resultMap="basic_result_map">		select * from m_order where order_id like #{orderId} 		<if test="storeId!=null and storeId!=''">			and storeId = #{storeId} 		</if>	</select>	 		 	<select id="getrevphone" parameterType="java.lang.String">		select rev.phone 		from `m_order`		left join `receive_users` as rev		on rev.id=`m_order`.ruserId		where  `m_order`.`pay_date` <![CDATA[>=]]>#{s_paydate} and `m_order`.`pay_date` <![CDATA[<=]]>#{e_paydate}	</select>	 	 		<select id="getpayDateMorder" resultMap="basic_mt_result_map">	select m_order.*		from `m_order`		where  `m_order`.`pay_date` <![CDATA[>=]]>#{s_paydate} and `m_order`.`pay_date` <![CDATA[<=]]>#{e_paydate} and `m_order`.`order_id` like #{order_key}	</select>	 					<!-- 查找支付或未支付的运单 -->	<select id="countOfSearchMOrdersbyUserpayornot" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order`		<if test="info!=null and info!=''">			left join `send_users` as su			on su.id=`m_order`.suserId			left join `receive_users` as ru			on ru.id=`m_order`.ruserId			left join `m_detail` as md			on md.order_id=`m_order`.order_id		</if>		<where>					<if test="oid!=null and oid!=''">				`m_order`.`order_id` like #{oid} 			</if>			<if test="userId!=null and userId!=''">				and `m_order`.`user_id` = #{userId} 			</if>			<if test="wid!=null and wid!=''">				and `m_order`.`storeId` =#{wid} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="info!=null and info!=''">			  and (su.name like #{info} or su.phone like #{info} or su.email like #{info} or su.company like #{info}			  or su.state like #{info} or su.city like #{info} or su.dist like #{info} or su.address like #{info}			  or ru.name like #{info} or ru.phone like #{info} or ru.email like #{info} or ru.company like #{info}			  or ru.state like #{info} or ru.city like #{info} or ru.dist like #{info} or ru.address like #{info}			  or md.productName like #{info} or md.brands like #{info} or md.name like #{info} or md.remark like #{info}			  )			</if>					<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<if test="type!=null and type!=''">				and `m_order`.`type` =#{type} 			</if>			<if test="payornot!=null and payornot!=''">				and  `m_order`.`payornot` = #{payornot}			</if>			<if test="minstate!=null and minstate!=''">				and  `m_order`.`state` >= #{minstate}			</if>		</where>	</select>	<select id="SearchMOrdersbyUserpayornot" resultMap="basic_result_map">		select distinct `m_order`.*		from `m_order`		<if test="info!=null and info!=''">			left join `send_users` as su			on su.id=`m_order`.suserId			left join `receive_users` as ru			on ru.id=`m_order`.ruserId			left join `m_detail` as md			on md.order_id=`m_order`.order_id		</if>		<where>					<if test="oid!=null and oid!=''">				`m_order`.`order_id` like #{oid} 			</if>			<if test="userId!=null and userId!=''">				and `m_order`.`user_id` = #{userId} 			</if>			<if test="wid!=null and wid!=''">				and `m_order`.`storeId` =#{wid} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="info!=null and info!=''">			  and (su.name like #{info} or su.phone like #{info} or su.email like #{info} or su.company like #{info}			  or su.state like #{info} or su.city like #{info} or su.dist like #{info} or su.address like #{info}			  or ru.name like #{info} or ru.phone like #{info} or ru.email like #{info} or ru.company like #{info}			  or ru.state like #{info} or ru.city like #{info} or ru.dist like #{info} or ru.address like #{info}			  or md.productName like #{info} or md.brands like #{info} or md.name like #{info} or md.remark like #{info}			  )			</if>					<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<if test="type!=null and type!=''">				and `m_order`.`type` =#{type} 			</if>			<if test="payornot!=null and payornot!=''">				and  `m_order`.`payornot` = #{payornot}			</if>			<if test="minstate!=null and minstate!=''">				and  `m_order`.`state` >= #{minstate}			</if>		</where>		order by `m_order`.`create_date` desc		limit		#{index},#{size}	</select>			<select id="countOfSearchMOrders_nopay" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order`		left join `employees` as e		on e.id=`m_order`.employeeId		left join `warehouse` as w		on w.id=`m_order`.storeId		left join `channels` as ch		on ch.id=`m_order`.channelId		<if test="userinfo!=null and userinfo!=''">			left join `users` as u			on u.id=`m_order`.user_id			left join `send_users` as su			on su.id=`m_order`.suserId			left join `receive_users` as ru			on ru.id=`m_order`.ruserId		</if>				<if test="commudityinfo!=null and commudityinfo!=''">			left join `m_detail` as md			on md.order_id=`m_order`.order_id		</if>				<where>					<if test="oid!=null and oid!=''">				`m_order`.`order_id` like #{oid} 			</if>			<if test="sod!=null and sod!=''">				and `m_order`.`sorderId` like #{sod} 			</if>			<if test="god!=null and god!=''">				and `m_order`.`third_no` like #{god} 			</if>			<if test="flyno!=null and flyno!=''">				and `m_order`.`flyno` =#{flyno} 			</if>			<if test="wid!=null and wid!=''">				and `m_order`.`storeId` =#{wid} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="userinfo!=null and userinfo!=''">			  and (u.email like #{userinfo} or u.nick_name like #{userinfo} or u.real_name like #{userinfo} or u.phone like #{userinfo} or u.qq like #{userinfo}			  or su.name like #{userinfo} or su.phone like #{userinfo} or su.email like #{userinfo} or su.company like #{userinfo}			  or ru.name like #{userinfo} or ru.phone like #{userinfo} or ru.email like #{userinfo} or ru.company like #{userinfo}			  )			</if>			<if test="commudityinfo!=null and commudityinfo!=''">			and (md.productName like #{commudityinfo} or md.brands like #{commudityinfo} or md.name like #{commudityinfo} or md.remark like #{commudityinfo})			</if>			<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<if test="type!=null and type!=''">				and `m_order`.`type` =#{type} 			</if>			<if test="payway!=null and payway!=''">				and `m_order`.`payWay` =#{payway} 			</if>			<if test="sdate!=null and sdate!=''">				and `m_order`.`create_date` <![CDATA[>=]]>				#{sdate}			</if>			<if test="edate!=null and edate!=''">				and `m_order`.`create_date` <![CDATA[<=]]>				#{edate}			</if>			<if test="psdate!=null and psdate!=''">				and `m_order`.`pay_date` <![CDATA[>=]]>				#{psdate}			</if>			<if test="pedate!=null and pedate!=''">				and `m_order`.`pay_date` <![CDATA[<=]]>				#{pedate}			</if>			<if test="cardurl!=null and cardurl!=''">				and (ru.`cardurl` !="" and ru.`cardurl` !='null')			</if>			<if test="cardother!=null and cardother!=''">				and (ru.`cardother` !="" and ru.`cardother` !='null')			</if>			<if test="cardtogether!=null and cardtogether!=''">				and (ru.`cardtogether` !="" and ru.`cardtogether` !='null')			</if>			<if test="uploadflag!=null and uploadflag!=''">				and ru.uploadflag=#{uploadflag}			</if>			<if test="cardid!=null and cardid!=''">				and (ru.`cardid` !="" and ru.`cardid` !='null')			</if>			<if test="payornot!=null and payornot!=''">				and  `m_order`.`payornot` = #{payornot}			</if>			and `m_order`.`state` >= '2'		</where>	</select>		<select id="SearchMOrders_nopay" resultMap="basic_result_map">		select distinct `m_order`.* ,e.account AS employeeName,w.name AS storeName,ch.name AS channelName		from `m_order`		left join `employees` as e		on e.id=`m_order`.employeeId		left join `warehouse` as w		on w.id=`m_order`.storeId		left join `channels` as ch		on ch.id=`m_order`.channelId		<if test="userinfo!=null and userinfo!=''">			left join `users` as u			on u.id=`m_order`.user_id			left join `send_users` as su			on su.id=`m_order`.suserId			left join `receive_users` as ru			on ru.id=`m_order`.ruserId		</if>				<if test="commudityinfo!=null and commudityinfo!=''">			left join `m_detail` as md			on md.order_id=`m_order`.order_id		</if>				<where>					<if test="oid!=null and oid!=''">				`m_order`.`order_id` like #{oid} 			</if>			<if test="sod!=null and sod!=''">				and `m_order`.`sorderId` like #{sod} 			</if>			<if test="god!=null and god!=''">				and `m_order`.`third_no` like #{god} 			</if>			<if test="flyno!=null and flyno!=''">				and `m_order`.`flyno` =#{flyno} 			</if>			<if test="wid!=null and wid!=''">				and `m_order`.`storeId` =#{wid} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="userinfo!=null and userinfo!=''">			  and (u.email like #{userinfo} or u.nick_name like #{userinfo} or u.real_name like #{userinfo} or u.phone like #{userinfo} or u.qq like #{userinfo}			  or su.name like #{userinfo} or su.phone like #{userinfo} or su.email like #{userinfo} or su.company like #{userinfo}			  or ru.name like #{userinfo} or ru.phone like #{userinfo} or ru.email like #{userinfo} or ru.company like #{userinfo}			  )			</if>			<if test="commudityinfo!=null and commudityinfo!=''">			and (md.productName like #{commudityinfo} or md.brands like #{commudityinfo} or md.name like #{commudityinfo} or md.remark like #{commudityinfo})			</if>			<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<if test="type!=null and type!=''">				and `m_order`.`type` =#{type} 			</if>			<if test="payway!=null and payway!=''">				and `m_order`.`payWay` =#{payway} 			</if>			<if test="sdate!=null and sdate!=''">				and `m_order`.`create_date` <![CDATA[>=]]>				#{sdate}			</if>			<if test="edate!=null and edate!=''">				and `m_order`.`create_date` <![CDATA[<=]]>				#{edate}			</if>			<if test="psdate!=null and psdate!=''">				and `m_order`.`pay_date` <![CDATA[>=]]>				#{psdate}			</if>			<if test="pedate!=null and pedate!=''">				and `m_order`.`pay_date` <![CDATA[<=]]>				#{pedate}			</if>			<if test="cardurl!=null and cardurl!=''">				and (ru.`cardurl` !="" and ru.`cardurl` !='null')			</if>			<if test="cardother!=null and cardother!=''">				and (ru.`cardother` !="" and ru.`cardother` !='null')			</if>			<if test="cardtogether!=null and cardtogether!=''">				and (ru.`cardtogether` !="" and ru.`cardtogether` !='null')			</if>			<if test="uploadflag!=null and uploadflag!=''">				and ru.uploadflag=#{uploadflag}			</if>			<if test="cardid!=null and cardid!=''">				and (ru.`cardid` !="" and ru.`cardid` !='null')			</if>			<if test="payornot!=null and payornot!=''">				and  `m_order`.`payornot` = #{payornot}			</if>			and `m_order`.`state` >= '2'		</where>		order by `m_order`.`create_date` desc		limit		#{index},#{size}	</select>			<update id="clear_position"> 		update m_order set positionId="0",			modify_date=#{modifyDate}		 	where positionId=#{positionId} </update>		 			 			 			 		<select id="countOfSearchMOrders_paybyuser" resultType="java.lang.Integer">		select count(distinct `m_order`.id) 		from `m_order`		left join `employees` as e		on e.id=`m_order`.employeeId		left join `warehouse` as w		on w.id=`m_order`.storeId		left join `channels` as ch		on ch.id=`m_order`.channelId		<if test="userinfo!=null and userinfo!=''">			left join `users` as u			on u.id=`m_order`.user_id			left join `send_users` as su			on su.id=`m_order`.suserId			left join `receive_users` as ru			on ru.id=`m_order`.ruserId		</if>				<if test="commudityinfo!=null and commudityinfo!=''">			left join `m_detail` as md			on md.order_id=`m_order`.order_id		</if>				<where>					<if test="oid!=null and oid!=''">				`m_order`.`order_id` like #{oid} 			</if>			<if test="sod!=null and sod!=''">				and `m_order`.`sorderId` like #{sod} 			</if>			<if test="god!=null and god!=''">				and `m_order`.`third_no` like #{god} 			</if>			<if test="flyno!=null and flyno!=''">				and `m_order`.`flyno` =#{flyno} 			</if>			<if test="wid!=null and wid!=''">				and `m_order`.`storeId` =#{wid} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="userinfo!=null and userinfo!=''">			  and (u.email like #{userinfo} or u.nick_name like #{userinfo} or u.real_name like #{userinfo} or u.phone like #{userinfo} or u.qq like #{userinfo}			  or su.name like #{userinfo} or su.phone like #{userinfo} or su.email like #{userinfo} or su.company like #{userinfo}			  or ru.name like #{userinfo} or ru.phone like #{userinfo} or ru.email like #{userinfo} or ru.company like #{userinfo}			  )			</if>			<if test="commudityinfo!=null and commudityinfo!=''">			and (md.productName like #{commudityinfo} or md.brands like #{commudityinfo} or md.name like #{commudityinfo} or md.remark like #{commudityinfo})			</if>			<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<if test="type!=null and type!=''">				and `m_order`.`type` =#{type} 			</if>			<if test="payway!=null and payway!=''">				and `m_order`.`payWay` =#{payway} 			</if>			<if test="sdate!=null and sdate!=''">				and `m_order`.`create_date` <![CDATA[>=]]>				#{sdate}			</if>			<if test="edate!=null and edate!=''">				and `m_order`.`create_date` <![CDATA[<=]]>				#{edate}			</if>			<if test="psdate!=null and psdate!=''">				and `m_order`.`pay_date` <![CDATA[>=]]>				#{psdate}			</if>			<if test="pedate!=null and pedate!=''">				and `m_order`.`pay_date` <![CDATA[<=]]>				#{pedate}			</if>			<if test="cardurl!=null and cardurl!=''">				and (ru.`cardurl` !="" and ru.`cardurl` !='null')			</if>			<if test="cardother!=null and cardother!=''">				and (ru.`cardother` !="" and ru.`cardother` !='null')			</if>			<if test="cardtogether!=null and cardtogether!=''">				and (ru.`cardtogether` !="" and ru.`cardtogether` !='null')			</if>			<if test="uploadflag!=null and uploadflag!=''">				and ru.uploadflag=#{uploadflag}			</if>			<if test="cardid!=null and cardid!=''">				and (ru.`cardid` !="" and ru.`cardid` !='null')			</if>			<if test="payornot!=null and payornot!=''">				and  `m_order`.`payornot` = #{payornot}			</if>			<if test="confirm_user_pay!=null and confirm_user_pay!=''">				and  `m_order`.`confirm_user_pay` = #{confirm_user_pay}			</if>					</where>	</select>		<select id="SearchMOrders_paybyuser" resultMap="basic_result_map">		select distinct `m_order`.* ,e.account AS employeeName,w.name AS storeName,ch.name AS channelName		from `m_order`		left join `employees` as e		on e.id=`m_order`.employeeId		left join `warehouse` as w		on w.id=`m_order`.storeId		left join `channels` as ch		on ch.id=`m_order`.channelId		<if test="userinfo!=null and userinfo!=''">			left join `users` as u			on u.id=`m_order`.user_id			left join `send_users` as su			on su.id=`m_order`.suserId			left join `receive_users` as ru			on ru.id=`m_order`.ruserId		</if>				<if test="commudityinfo!=null and commudityinfo!=''">			left join `m_detail` as md			on md.order_id=`m_order`.order_id		</if>				<where>					<if test="oid!=null and oid!=''">				`m_order`.`order_id` like #{oid} 			</if>			<if test="sod!=null and sod!=''">				and `m_order`.`sorderId` like #{sod} 			</if>			<if test="god!=null and god!=''">				and `m_order`.`third_no` like #{god} 			</if>			<if test="flyno!=null and flyno!=''">				and `m_order`.`flyno` =#{flyno} 			</if>			<if test="wid!=null and wid!=''">				and `m_order`.`storeId` =#{wid} 			</if>			<if test="cid!=null and cid!=''">				and `m_order`.`channelId` =#{cid} 			</if>			<if test="userinfo!=null and userinfo!=''">			  and (u.email like #{userinfo} or u.nick_name like #{userinfo} or u.real_name like #{userinfo} or u.phone like #{userinfo} or u.qq like #{userinfo}			  or su.name like #{userinfo} or su.phone like #{userinfo} or su.email like #{userinfo} or su.company like #{userinfo}			  or ru.name like #{userinfo} or ru.phone like #{userinfo} or ru.email like #{userinfo} or ru.company like #{userinfo}			  )			</if>			<if test="commudityinfo!=null and commudityinfo!=''">			and (md.productName like #{commudityinfo} or md.brands like #{commudityinfo} or md.name like #{commudityinfo} or md.remark like #{commudityinfo})			</if>			<if test="state!=null and state!=''">				and `m_order`.`state` =#{state} 			</if>			<if test="type!=null and type!=''">				and `m_order`.`type` =#{type} 			</if>			<if test="payway!=null and payway!=''">				and `m_order`.`payWay` =#{payway} 			</if>			<if test="sdate!=null and sdate!=''">				and `m_order`.`create_date` <![CDATA[>=]]>				#{sdate}			</if>			<if test="edate!=null and edate!=''">				and `m_order`.`create_date` <![CDATA[<=]]>				#{edate}			</if>			<if test="psdate!=null and psdate!=''">				and `m_order`.`pay_date` <![CDATA[>=]]>				#{psdate}			</if>			<if test="pedate!=null and pedate!=''">				and `m_order`.`pay_date` <![CDATA[<=]]>				#{pedate}			</if>			<if test="cardurl!=null and cardurl!=''">				and (ru.`cardurl` !="" and ru.`cardurl` !='null')			</if>			<if test="cardother!=null and cardother!=''">				and (ru.`cardother` !="" and ru.`cardother` !='null')			</if>			<if test="cardtogether!=null and cardtogether!=''">				and (ru.`cardtogether` !="" and ru.`cardtogether` !='null')			</if>			<if test="uploadflag!=null and uploadflag!=''">				and ru.uploadflag=#{uploadflag}			</if>			<if test="cardid!=null and cardid!=''">				and (ru.`cardid` !="" and ru.`cardid` !='null')			</if>			<if test="payornot!=null and payornot!=''">				and  `m_order`.`payornot` = #{payornot}			</if>			<if test="confirm_user_pay!=null and confirm_user_pay!=''">				and  `m_order`.`confirm_user_pay` = #{confirm_user_pay}			</if>		</where>		order by `m_order`.`create_date` desc		limit		#{index},#{size}	</select>	 			 <update id="change_paybyuserstate"> 		update m_order set confirm_user_pay=#{confirm_user_pay},			modify_date=#{modifyDate}		 	where id=#{id} </update>		</mapper>